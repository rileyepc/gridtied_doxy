<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lib_epc_control_interface_8c" xml:lang="en-US">
<title>sil/libEpcControlInterface.c File Reference</title>
<indexterm><primary>sil/libEpcControlInterface.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;math.h&gt;
#include &lt;string.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdlib.h&gt;
#include &quot;silWrapper.h&quot;
#include &quot;json-c/json_object.h&quot;
#include &quot;json-c/json_tokener.h&quot;
#include &quot;utils.h&quot;
#include &quot;libEpcControlInterface.h&quot;
#include &quot;libEpcControlInterfaceGen.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_lib_epc_control_interface_8c_1a45895ce296865f2abdf7414446c607d4">SCALE_FLOAT</link>(value,  power)   ((double)(value) * pow(10.0L, (double)(power)))</para>
</listitem>
            <listitem><para>#define <link linkend="_lib_epc_control_interface_8c_1a4e18acc8f3b4018d713b5f4f64c9332b">SCALE_INT</link>(value,  power)   (round(<link linkend="_lib_epc_control_interface_8c_1a45895ce296865f2abdf7414446c607d4">SCALE_FLOAT</link>(value, power)))</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>json_object * <link linkend="_lib_epc_control_interface_8c_1a79bea176d7f6b5e9718f5450a27c77a1">get_json</link> (char *path)</para>
</listitem>
            <listitem><para>json_object * <link linkend="_lib_epc_control_interface_8c_1ae5a56d30a6cda41f97e15a9ae9a37df1">get_json_item</link> (json_object *root, char *uuid)</para>
</listitem>
            <listitem><para>void <link linkend="_lib_epc_control_interface_8c_1acf7f4325c6a7da38a297edc498de3a38">set</link> (<link linkend="_struct_item">Item</link> *item, json_object *json_item, bool const bVerbose, bool const callSetters)</para>
</listitem>
            <listitem><para>void <link linkend="_lib_epc_control_interface_8c_1a0a34752190321c6d532b08678991cf02">SIL_loadPmvs</link> (char *path, bool const bVerbose, bool const callSetters)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_lib_epc_control_interface_8c_1a45895ce296865f2abdf7414446c607d4"/><section>
    <title>SCALE_FLOAT</title>
<indexterm><primary>SCALE_FLOAT</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>SCALE_FLOAT</secondary></indexterm>
<para><computeroutput>#define SCALE_FLOAT( value,  power)   ((double)(value) * pow(10.0L, (double)(power)))</computeroutput></para></section>
<anchor xml:id="_lib_epc_control_interface_8c_1a4e18acc8f3b4018d713b5f4f64c9332b"/><section>
    <title>SCALE_INT</title>
<indexterm><primary>SCALE_INT</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>SCALE_INT</secondary></indexterm>
<para><computeroutput>#define SCALE_INT( value,  power)   (round(<link linkend="_lib_epc_control_interface_8c_1a45895ce296865f2abdf7414446c607d4">SCALE_FLOAT</link>(value, power)))</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_lib_epc_control_interface_8c_1a79bea176d7f6b5e9718f5450a27c77a1"/><section>
    <title>get_json()</title>
<indexterm><primary>get_json</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>get_json</secondary></indexterm>
<para><computeroutput>json_object * get_json (char * path)</computeroutput></para></section>
<anchor xml:id="_lib_epc_control_interface_8c_1ae5a56d30a6cda41f97e15a9ae9a37df1"/><section>
    <title>get_json_item()</title>
<indexterm><primary>get_json_item</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>get_json_item</secondary></indexterm>
<para><computeroutput>json_object * get_json_item (json_object * root, char * uuid)</computeroutput></para></section>
<anchor xml:id="_lib_epc_control_interface_8c_1acf7f4325c6a7da38a297edc498de3a38"/><section>
    <title>set()</title>
<indexterm><primary>set</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void set (<link linkend="_struct_item">Item</link> * item, json_object * json_item, bool const bVerbose, bool const callSetters)</computeroutput></para></section>
<anchor xml:id="_lib_epc_control_interface_8c_1a0a34752190321c6d532b08678991cf02"/><section>
    <title>SIL_loadPmvs()</title>
<indexterm><primary>SIL_loadPmvs</primary><secondary>libEpcControlInterface.c</secondary></indexterm>
<indexterm><primary>libEpcControlInterface.c</primary><secondary>SIL_loadPmvs</secondary></indexterm>
<para><computeroutput>void SIL_loadPmvs (char * path, bool const bVerbose, bool const callSetters)</computeroutput></para></section>
</section>
</section>
