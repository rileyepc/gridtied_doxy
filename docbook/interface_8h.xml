<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_interface_8h" xml:lang="en-US">
<title>interface/interface.h File Reference</title>
<indexterm><primary>interface/interface.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stddef.h&gt;
#include &quot;canInterfaceEnums.h&quot;
#include &quot;sunspec.h&quot;
#include &quot;meta.h&quot;
#include &quot;IEEE1547.h&quot;
#include &quot;authorization.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_rejection_reasons">RejectionReasons</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_specifics">InterfaceSpecifics</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_specifics_sun_spec">InterfaceSpecificsSunSpec</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_specifics_static_modbus">InterfaceSpecificsStaticModbus</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_item_common">InterfaceItemCommon</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_item___bitfield_member">InterfaceItem_BitfieldMember</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_interface_item___bitfield">InterfaceItem_Bitfield</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_interface_8h_1aa983482eaaf4b98c2e967c60c13ebb42">REJECTIONREASONS_DEFAULTS</link>(metaIndex_, ...)</para>
</listitem>
            <listitem><para>#define <link linkend="_interface_8h_1a61fa532cd4060e9b2d2d701c6c4d1b30">REJECTIONREASONS_ANY</link>(reasons)</para>
</listitem>
            <listitem><para>#define <link linkend="_interface_8h_1a365fa67bab8eb8daf2e6351ef4d52d6e">REJECTIONREASONS_NONE</link>(reasons)   (!<link linkend="_interface_8h_1a61fa532cd4060e9b2d2d701c6c4d1b30">REJECTIONREASONS_ANY</link>(reasons))</para>
</listitem>
            <listitem><para>#define <link linkend="_interface_8h_1ac0aecb85217a8c58bcbbe0add3e9fa06">REJECTIONREASONS_ONLY</link>(reasons,  name)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef void <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_rejection_reasons">RejectionReasons</link> <link linkend="_interface_8h_1aeb8e6c70056e982823417048cc8b0b10">RejectionReasons</link></para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_interface_8h_1a7e4c5ca9fb6c453361a231c31799f2b8">ItemGetter</link>) (void const *const item, Meta_Enum meta)</para>
</listitem>
            <listitem><para>typedef void(* <link linkend="_interface_8h_1abd123dcb703c202a5cb3e6d04fd03328">ItemGetterStaticModbus</link>) (void const *const item, Meta_Enum meta, int16_t *getterVariable)</para>
</listitem>
            <listitem><para>typedef bool(* <link linkend="_interface_8h_1a4123a77c6016d61b0b1026ec0541d735">ItemSetter</link>) (void const *const item, bool check_limits, Meta_Enum meta)</para>
</listitem>
            <listitem><para>typedef bool(* <link linkend="_interface_8h_1ae88346ef2671fe02f5968bb747aeb9c3">ItemSetterStaticModbus</link>) (void const *const item, bool check_limits, Meta_Enum meta, int16_t *setterVariable)</para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_specifics">InterfaceSpecifics</link> <link linkend="_interface_8h_1ace168ec393881d3c5f5ecf94e417e33b">InterfaceSpecifics</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_specifics_sun_spec">InterfaceSpecificsSunSpec</link> <link linkend="_interface_8h_1a541093f34997b86155bc05413d9831c2">InterfaceSpecificsSunSpec</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_specifics_static_modbus">InterfaceSpecificsStaticModbus</link> <link linkend="_interface_8h_1aec201b9ad26c19f3cc25668fe2ead5c6">InterfaceSpecificsStaticModbus</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_item_common">InterfaceItemCommon</link> <link linkend="_interface_8h_1acb1d82380be5c0d254dfb501eb3d5e97">InterfaceItemCommon</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_item___bitfield_member">InterfaceItem_BitfieldMember</link> <link linkend="_interface_8h_1a3dadbb90a5406c1176a12b289bc1d49d">InterfaceItem_BitfieldMember</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_interface_item___bitfield">InterfaceItem_Bitfield</link> <link linkend="_interface_8h_1ad4788ffbec9d53108170995250840db7">InterfaceItem_Bitfield</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>sunssf <link linkend="_interface_8h_1a1456a3e6d18b4b338ca7d542de34ed6c">itemNetScaleFactor</link> (<link linkend="_struct_interface_item_common">InterfaceItemCommon</link> const *const item)</para>
</listitem>
            <listitem><para>void <link linkend="_interface_8h_1a6aadaf337d1caee0a760aa9ae127360d">items_getMeta</link> (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</para>
</listitem>
            <listitem><para>void <link linkend="_interface_8h_1ad509994a37bdba87b40e6407e5523b20">items_setMeta</link> (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</para>
</listitem>
            <listitem><para>void <link linkend="_interface_8h_1a00ca1b7737ba8d9bf03aa228a2186171">table_items_getMeta</link> (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</para>
</listitem>
            <listitem><para>void <link linkend="_interface_8h_1a176414fba733ccb522284cdd7fbe31ce">table_items_setMeta</link> (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>CAN_Enum_AccessLevel <link linkend="_interface_8h_1a4b4d547f1291c2b0839837d1263cecd8">metaMinimumAccessLevel</link> [Meta_Count]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_interface_8h_1a61fa532cd4060e9b2d2d701c6c4d1b30"/><section>
    <title>REJECTIONREASONS_ANY</title>
<indexterm><primary>REJECTIONREASONS_ANY</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>REJECTIONREASONS_ANY</secondary></indexterm>
<para><computeroutput>#define REJECTIONREASONS_ANY( reasons)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">(&#32;\
&#32;&#32;&#32;&#32;(reasons).outOfRange&#32;\
&#32;&#32;&#32;&#32;||&#32;(reasons).meta&#32;\
&#32;&#32;&#32;&#32;||&#32;(reasons).auth&#32;\
&#32;&#32;&#32;&#32;||&#32;(reasons).setter&#32;\
&#32;&#32;&#32;&#32;||&#32;(reasons).inactiveInterface&#32;\
)
</programlisting></section>
<anchor xml:id="_interface_8h_1aa983482eaaf4b98c2e967c60c13ebb42"/><section>
    <title>REJECTIONREASONS_DEFAULTS</title>
<indexterm><primary>REJECTIONREASONS_DEFAULTS</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>REJECTIONREASONS_DEFAULTS</secondary></indexterm>
<para><computeroutput>#define REJECTIONREASONS_DEFAULTS( metaIndex_,  ...)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">{&#32;\
&#32;&#32;&#32;&#32;.outOfRange&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;\
&#32;&#32;&#32;&#32;.meta&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;\
&#32;&#32;&#32;&#32;.metaIndex&#32;=&#32;metaIndex_,&#32;\
&#32;&#32;&#32;&#32;.auth&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;\
&#32;&#32;&#32;&#32;.setter&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;\
&#32;&#32;&#32;&#32;.inactiveInterface&#32;=&#32;<emphasis role="keyword">false</emphasis>,&#32;\
<emphasis role="preprocessor">&#32;&#32;&#32;&#32;##__VA_ARGS__&#32;\</emphasis>
<emphasis role="preprocessor">}</emphasis>
</programlisting></section>
<anchor xml:id="_interface_8h_1a365fa67bab8eb8daf2e6351ef4d52d6e"/><section>
    <title>REJECTIONREASONS_NONE</title>
<indexterm><primary>REJECTIONREASONS_NONE</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>REJECTIONREASONS_NONE</secondary></indexterm>
<para><computeroutput>#define REJECTIONREASONS_NONE( reasons)   (!<link linkend="_interface_8h_1a61fa532cd4060e9b2d2d701c6c4d1b30">REJECTIONREASONS_ANY</link>(reasons))</computeroutput></para></section>
<anchor xml:id="_interface_8h_1ac0aecb85217a8c58bcbbe0add3e9fa06"/><section>
    <title>REJECTIONREASONS_ONLY</title>
<indexterm><primary>REJECTIONREASONS_ONLY</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>REJECTIONREASONS_ONLY</secondary></indexterm>
<para><computeroutput>#define REJECTIONREASONS_ONLY( reasons,  name)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">(&#32;\
&#32;&#32;&#32;&#32;((reasons).name)&#32;\
&#32;&#32;&#32;&#32;&amp;&amp;&#32;(&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((reasons).outOfRange&#32;?&#32;1&#32;:&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;((reasons).meta&#32;?&#32;1&#32;:&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;((reasons).auth&#32;?&#32;1&#32;:&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;((reasons).setter&#32;?&#32;1&#32;:&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;((reasons).inactiveInterface&#32;?&#32;1&#32;:&#32;0)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1&#32;\
&#32;&#32;&#32;&#32;)&#32;\
)
</programlisting></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_interface_8h_1ad4788ffbec9d53108170995250840db7"/><section>
    <title>InterfaceItem_Bitfield</title>
<indexterm><primary>InterfaceItem_Bitfield</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceItem_Bitfield</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_item___bitfield">InterfaceItem_Bitfield</link> <link linkend="_struct_interface_item___bitfield">InterfaceItem_Bitfield</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1a3dadbb90a5406c1176a12b289bc1d49d"/><section>
    <title>InterfaceItem_BitfieldMember</title>
<indexterm><primary>InterfaceItem_BitfieldMember</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceItem_BitfieldMember</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_item___bitfield_member">InterfaceItem_BitfieldMember</link> <link linkend="_struct_interface_item___bitfield_member">InterfaceItem_BitfieldMember</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7"/><section>
    <title>InterfaceItem_void</title>
<indexterm><primary>InterfaceItem_void</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceItem_void</secondary></indexterm>
<para><computeroutput>typedef void <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1acb1d82380be5c0d254dfb501eb3d5e97"/><section>
    <title>InterfaceItemCommon</title>
<indexterm><primary>InterfaceItemCommon</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceItemCommon</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_item_common">InterfaceItemCommon</link> <link linkend="_struct_interface_item_common">InterfaceItemCommon</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1ace168ec393881d3c5f5ecf94e417e33b"/><section>
    <title>InterfaceSpecifics</title>
<indexterm><primary>InterfaceSpecifics</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceSpecifics</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_specifics">InterfaceSpecifics</link> <link linkend="_struct_interface_specifics">InterfaceSpecifics</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1aec201b9ad26c19f3cc25668fe2ead5c6"/><section>
    <title>InterfaceSpecificsStaticModbus</title>
<indexterm><primary>InterfaceSpecificsStaticModbus</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceSpecificsStaticModbus</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_specifics_static_modbus">InterfaceSpecificsStaticModbus</link> <link linkend="_struct_interface_specifics_static_modbus">InterfaceSpecificsStaticModbus</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1a541093f34997b86155bc05413d9831c2"/><section>
    <title>InterfaceSpecificsSunSpec</title>
<indexterm><primary>InterfaceSpecificsSunSpec</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>InterfaceSpecificsSunSpec</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_interface_specifics_sun_spec">InterfaceSpecificsSunSpec</link> <link linkend="_struct_interface_specifics_sun_spec">InterfaceSpecificsSunSpec</link></computeroutput></para></section>
<anchor xml:id="_interface_8h_1a7e4c5ca9fb6c453361a231c31799f2b8"/><section>
    <title>ItemGetter</title>
<indexterm><primary>ItemGetter</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>ItemGetter</secondary></indexterm>
<para><computeroutput>typedef void(* ItemGetter) (void const *const item, Meta_Enum meta)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1abd123dcb703c202a5cb3e6d04fd03328"/><section>
    <title>ItemGetterStaticModbus</title>
<indexterm><primary>ItemGetterStaticModbus</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>ItemGetterStaticModbus</secondary></indexterm>
<para><computeroutput>typedef void(* ItemGetterStaticModbus) (void const *const item, Meta_Enum meta, int16_t *getterVariable)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1a4123a77c6016d61b0b1026ec0541d735"/><section>
    <title>ItemSetter</title>
<indexterm><primary>ItemSetter</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>ItemSetter</secondary></indexterm>
<para><computeroutput>typedef bool(* ItemSetter) (void const *const item, bool check_limits, Meta_Enum meta)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1ae88346ef2671fe02f5968bb747aeb9c3"/><section>
    <title>ItemSetterStaticModbus</title>
<indexterm><primary>ItemSetterStaticModbus</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>ItemSetterStaticModbus</secondary></indexterm>
<para><computeroutput>typedef bool(* ItemSetterStaticModbus) (void const *const item, bool check_limits, Meta_Enum meta, int16_t *setterVariable)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1aeb8e6c70056e982823417048cc8b0b10"/><section>
    <title>RejectionReasons</title>
<indexterm><primary>RejectionReasons</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>RejectionReasons</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_rejection_reasons">RejectionReasons</link> <link linkend="_struct_rejection_reasons">RejectionReasons</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_interface_8h_1a1456a3e6d18b4b338ca7d542de34ed6c"/><section>
    <title>itemNetScaleFactor()</title>
<indexterm><primary>itemNetScaleFactor</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>itemNetScaleFactor</secondary></indexterm>
<para><computeroutput>sunssf itemNetScaleFactor (<link linkend="_struct_interface_item_common">InterfaceItemCommon</link> const *const item)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1a6aadaf337d1caee0a760aa9ae127360d"/><section>
    <title>items_getMeta()</title>
<indexterm><primary>items_getMeta</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>items_getMeta</secondary></indexterm>
<para><computeroutput>void items_getMeta (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1ad509994a37bdba87b40e6407e5523b20"/><section>
    <title>items_setMeta()</title>
<indexterm><primary>items_setMeta</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>items_setMeta</secondary></indexterm>
<para><computeroutput>void items_setMeta (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1a00ca1b7737ba8d9bf03aa228a2186171"/><section>
    <title>table_items_getMeta()</title>
<indexterm><primary>table_items_getMeta</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>table_items_getMeta</secondary></indexterm>
<para><computeroutput>void table_items_getMeta (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</computeroutput></para></section>
<anchor xml:id="_interface_8h_1a176414fba733ccb522284cdd7fbe31ce"/><section>
    <title>table_items_setMeta()</title>
<indexterm><primary>table_items_setMeta</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>table_items_setMeta</secondary></indexterm>
<para><computeroutput>void table_items_setMeta (Meta_Enum meta_index, <link linkend="_interface_8h_1a2d58cf9316da363273ac00d4455ab5f7">InterfaceItem_void</link> const *const *const items, uint16_t items_count)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_interface_8h_1a4b4d547f1291c2b0839837d1263cecd8"/><section>
    <title>metaMinimumAccessLevel</title>
<indexterm><primary>metaMinimumAccessLevel</primary><secondary>interface.h</secondary></indexterm>
<indexterm><primary>interface.h</primary><secondary>metaMinimumAccessLevel</secondary></indexterm>
<para><computeroutput>CAN_Enum_AccessLevel metaMinimumAccessLevel[Meta_Count]<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
