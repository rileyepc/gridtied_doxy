<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="lib_epc_control_8c" kind="file" language="C++">
    <compoundname>libEpcControl.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="lib_epc_control_8h" local="yes">libEpcControl.h</includes>
    <includes refid="lib_epc_control_interface_8h" local="yes">libEpcControlInterface.h</includes>
    <includes refid="application_8h" local="yes">application.h</includes>
    <includes local="yes">channelMappingManagerI.h</includes>
    <includes local="yes">topLevelControlI.h</includes>
    <includes local="yes">topLevelControl.h</includes>
    <includes local="yes">powerConversionControl.h</includes>
    <includes local="yes">phaseConfigDetectI.h</includes>
    <includes local="yes">phaseControl.h</includes>
    <includes local="yes">filterObserverI.h</includes>
    <includes local="yes">phasePll.h</includes>
    <includes local="yes">auxiliaryPllI.h</includes>
    <includes local="yes">islandControlI.h</includes>
    <includes local="yes">protectedBusControlI.h</includes>
    <includes local="yes">phaseCurrentControlI.h</includes>
    <includes local="yes">adaptiveHarmonicControlI.h</includes>
    <includes local="yes">referenceHandler.h</includes>
    <includes local="yes">afe.h</includes>
    <includes local="yes">phaseSharedData.h</includes>
    <includes local="yes">modulator.h</includes>
    <includes local="yes">system.h</includes>
    <includes refid="scheduler__emu_8h" local="yes">scheduler_emu.h</includes>
    <includes local="yes">gridMonitor.h</includes>
    <includes local="yes">protectionsI.h</includes>
    <includes local="yes">deviceThermalModel.h</includes>
    <includes local="yes">measurementd.h</includes>
    <includes refid="epwm__emu_8h" local="yes">epwm_emu.h</includes>
    <includes local="yes">hardware.h</includes>
    <includes local="yes">hardwareScales.h</includes>
    <includes local="yes">supervisor.h</includes>
    <includes local="yes">protections.h</includes>
    <includes local="yes">externalInhibit.h</includes>
    <includes refid="interface_accessors_8h" local="yes">interfaceAccessors.h</includes>
    <includes local="yes">phaseConfigDetect.h</includes>
    <includes local="yes">syntheticInertia.h</includes>
    <incdepgraph>
      <node id="54">
        <label>ABB_libPrimaryControl.h</label>
      </node>
      <node id="11">
        <label>application.h</label>
        <link refid="application_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>interfaceAccessors.h</label>
        <link refid="interface_accessors_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>epwm_emu.h</label>
        <link refid="epwm__emu_8h"/>
      </node>
      <node id="36">
        <label>scheduler_emu.h</label>
        <link refid="scheduler__emu_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c</label>
        <link refid="lib_epc_control_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>libEpcControl.h</label>
        <link refid="lib_epc_control_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libEpcControlInterface.h</label>
        <link refid="lib_epc_control_interface_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>IEEE1547.h</label>
      </node>
      <node id="30">
        <label>adaptiveHarmonicControlI.h</label>
      </node>
      <node id="32">
        <label>afe.h</label>
      </node>
      <node id="15">
        <label>authorization.h</label>
      </node>
      <node id="49">
        <label>authorization_generated.h</label>
      </node>
      <node id="26">
        <label>auxiliaryPllI.h</label>
      </node>
      <node id="66">
        <label>canInterfaceEnums.h</label>
      </node>
      <node id="16">
        <label>cand.h</label>
      </node>
      <node id="18">
        <label>channelMappingManagerI.h</label>
      </node>
      <node id="14">
        <label>dataLogger.h</label>
      </node>
      <node id="55">
        <label>dcdcControlI.h</label>
      </node>
      <node id="40">
        <label>deviceThermalModel.h</label>
      </node>
      <node id="17">
        <label>digitalIO.h</label>
      </node>
      <node id="69">
        <label>eepromHandler.h</label>
      </node>
      <node id="62">
        <label>engDebug.h</label>
      </node>
      <node id="61">
        <label>environmentControl.h</label>
      </node>
      <node id="47">
        <label>externalInhibit.h</label>
      </node>
      <node id="60">
        <label>fanControl.h</label>
      </node>
      <node id="13">
        <label>faultHandler.h</label>
      </node>
      <node id="24">
        <label>filterObserverI.h</label>
      </node>
      <node id="71">
        <label>fpgaRegs.h</label>
      </node>
      <node id="38">
        <label>gridMonitor.h</label>
      </node>
      <node id="63">
        <label>gridSupport.h</label>
      </node>
      <node id="43">
        <label>hardware.h</label>
      </node>
      <node id="44">
        <label>hardwareScales.h</label>
      </node>
      <node id="57">
        <label>humiditySensor.h</label>
      </node>
      <node id="73">
        <label>interfaceAccessors_generated.h</label>
      </node>
      <node id="12">
        <label>ioHandler.h</label>
      </node>
      <node id="27">
        <label>islandControlI.h</label>
      </node>
      <node id="59">
        <label>loader.h</label>
      </node>
      <node id="2">
        <label>math.h</label>
      </node>
      <node id="41">
        <label>measurementd.h</label>
      </node>
      <node id="56">
        <label>measurementdI.h</label>
      </node>
      <node id="68">
        <label>meta.h</label>
      </node>
      <node id="70">
        <label>modbusHandler.h</label>
      </node>
      <node id="34">
        <label>modulator.h</label>
      </node>
      <node id="50">
        <label>modulatorI.h</label>
      </node>
      <node id="58">
        <label>mppt.h</label>
      </node>
      <node id="74">
        <label>phaseConfigDetect.h</label>
      </node>
      <node id="22">
        <label>phaseConfigDetectI.h</label>
      </node>
      <node id="23">
        <label>phaseControl.h</label>
      </node>
      <node id="51">
        <label>phaseControlI.h</label>
      </node>
      <node id="29">
        <label>phaseCurrentControlI.h</label>
      </node>
      <node id="25">
        <label>phasePll.h</label>
      </node>
      <node id="52">
        <label>phasePllI.h</label>
      </node>
      <node id="33">
        <label>phaseSharedData.h</label>
      </node>
      <node id="21">
        <label>powerConversionControl.h</label>
      </node>
      <node id="28">
        <label>protectedBusControlI.h</label>
      </node>
      <node id="46">
        <label>protections.h</label>
      </node>
      <node id="39">
        <label>protectionsI.h</label>
      </node>
      <node id="31">
        <label>referenceHandler.h</label>
      </node>
      <node id="37">
        <label>scheduler.h</label>
      </node>
      <node id="72">
        <label>simulateFeedbackI.h</label>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="67">
        <label>sunspec.h</label>
      </node>
      <node id="64">
        <label>sunspecRefs.h</label>
      </node>
      <node id="45">
        <label>supervisor.h</label>
      </node>
      <node id="75">
        <label>syntheticInertia.h</label>
      </node>
      <node id="53">
        <label>syntheticInertiaI.h</label>
      </node>
      <node id="35">
        <label>system.h</label>
      </node>
      <node id="20">
        <label>topLevelControl.h</label>
      </node>
      <node id="19">
        <label>topLevelControlI.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_i_l___task_handler__s" prot="public">SIL_TaskHandler_s</innerclass>
    <innerclass refid="struct_s_i_l___task_group__s" prot="public">SIL_TaskGroup_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lib_epc_control_8c_1ae782abdb390d65528ebd622389c5a5d4" prot="public" static="no">
        <name>SIL_EPSILON</name>
        <initializer>( 0.1e-9L )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="102" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1aec2b58cf1ed4b2c1886e3da72fa549fe" prot="public" static="no">
        <name>SIL_SNAPSHOT_FILENAME</name>
        <initializer>&quot;snapshot_data&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="103" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1ada32dc3ec0f400058499e4580e8eea2b" prot="public" static="no">
        <name>SIL_SNAPSHOT_FILE_EXTENSION</name>
        <initializer>&quot;.dat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="104" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1a1f3c42a620f7679b0c31c42950b36100" prot="public" static="no">
        <name>SIL_TASK_HANDLER_DEFAULTS</name>
        <param><defname>mCbk</defname></param>
        <initializer>    {                                                               \
    .tCallLast                  = -1.0,                                                                 \
    .taskCallback               = mCbk                                                                  \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="110" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1ad19e0c4362119d2f90556e7b53730929" prot="public" static="no">
        <name>SIL_TASK_HANDLERS_DEFAULTS</name>
        <param><defname>mGrp</defname></param>
        <initializer>    {                                                              \
    [<ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0a29f3a1246607f135de9c112ae2258e8a" kindref="member">SIL_TASK_CONTEXT_OUTPUT</ref>]   = <ref refid="lib_epc_control_8c_1a1f3c42a620f7679b0c31c42950b36100" kindref="member">SIL_TASK_HANDLER_DEFAULTS</ref>(SIL_updateOutput_##mGrp),                   \
    [<ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0abeaa7ea1b3e75063a32888ba135cac51" kindref="member">SIL_TASK_CONTEXT_STATE</ref>]    = <ref refid="lib_epc_control_8c_1a1f3c42a620f7679b0c31c42950b36100" kindref="member">SIL_TASK_HANDLER_DEFAULTS</ref>(SIL_updateState_##mGrp)                     \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="115" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1aff35d265592c728e66c7510c82902233" prot="public" static="no">
        <name>SIL_TASK_GROUP_DEFAULTS</name>
        <param><defname>mGrp</defname></param>
        <param><defname>mPer</defname></param>
        <initializer>    {                                                           \
    .tPeriod                    = mPer,                                                                 \
    .nHandlers                  = 2U,                                                                   \
    .taskHandlers               = <ref refid="lib_epc_control_8c_1ad19e0c4362119d2f90556e7b53730929" kindref="member">SIL_TASK_HANDLERS_DEFAULTS</ref>(mGrp)                                      \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="120" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" prot="public" static="no">
        <name>SIL_TASK_GROUP_DEFAULT</name>
        <param><defname>mGrp</defname></param>
        <param><defname>mPer</defname></param>
        <initializer>    [SIL_TASK_GROUP_##mGrp]     = <ref refid="lib_epc_control_8c_1aff35d265592c728e66c7510c82902233" kindref="member">SIL_TASK_GROUP_DEFAULTS</ref>(mGrp, mPer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="126" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1a73217f13108e9859b06c1082d832d5fb" prot="public" static="no">
        <name>SIL_TASK_GROUPS_DEFAULTS</name>
        <param><defname>...</defname></param>
        <initializer>    {                                                                 \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(ts,     150e-6),                                                             \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(200us,  200e-6),                                                             \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(1ms,    1.0e-3),                                                             \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(10ms,   10.0e-3),                                                            \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(100ms,  100.0e-3),                                                           \
    <ref refid="lib_epc_control_8c_1a9af98f89d7f7d97e6b61ff6d29435844" kindref="member">SIL_TASK_GROUP_DEFAULT</ref>(1s,     1000.0e-3),                                                          \
    ##__VA_ARGS__                                                                                       \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="129" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" prot="public" static="no">
        <name>SIL_UPDATE_TOGGLE</name>
        <param><defname>mGrp</defname></param>
        <initializer>    static bool updateToggle = true;                                                                    \
                                                                                                        \
    <ref refid="sil_wrapper_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3afea858383784badca3cbf45f10c3769e" kindref="member">SIL_OUT_CTL_CDIR</ref>, mGrp)    =  updateToggle;                                            \
    updateToggle                            = !updateToggle</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="139" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0" prot="public" static="no" strong="no">
        <type></type>
        <name>SIL_TaskContext_e</name>
        <enumvalue id="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0a29f3a1246607f135de9c112ae2258e8a" prot="public">
          <name>SIL_TASK_CONTEXT_OUTPUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0abeaa7ea1b3e75063a32888ba135cac51" prot="public">
          <name>SIL_TASK_CONTEXT_STATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0aabf0e2f1d319c42f4eb74f8795897373" prot="public">
          <name>SIL_TASK_CONTEXT_CNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="149" column="1" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="149" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lib_epc_control_8c_1a3210e1f49d48170d6b757cb502986256" prot="public" static="no">
        <type>enum <ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0" kindref="member">SIL_TaskContext_e</ref></type>
        <definition>typedef enum SIL_TaskContext_e SIL_eTaskContext_t</definition>
        <argsstring></argsstring>
        <name>SIL_eTaskContext_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="153" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="lib_epc_control_8c_1ae6f17a342abe900c59d650833838087c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* SIL_fTaskCallback_t) (double tNow)</definition>
        <argsstring>)(double tNow)</argsstring>
        <name>SIL_fTaskCallback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="155" column="9" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lib_epc_control_8c_1ae89a63ad9fd5e364d8b48eb25eef9757" prot="public" static="no">
        <type>struct <ref refid="struct_s_i_l___task_handler__s" kindref="compound">SIL_TaskHandler_s</ref></type>
        <definition>typedef struct SIL_TaskHandler_s SIL_sTaskHandler_t</definition>
        <argsstring></argsstring>
        <name>SIL_sTaskHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="160" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="lib_epc_control_8c_1a7ed97dea947336ca74b74780fb21e48b" prot="public" static="no">
        <type>struct <ref refid="struct_s_i_l___task_group__s" kindref="compound">SIL_TaskGroup_s</ref></type>
        <definition>typedef struct SIL_TaskGroup_s SIL_sTaskGroup_t</definition>
        <argsstring></argsstring>
        <name>SIL_sTaskGroup_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="166" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lib_epc_control_8c_1ab657a19b95f6cfab5a555d5d503c0b3e" prot="public" static="no" mutable="no">
        <type><ref refid="lib_epc_control_8h_1a6c0dfafedd208ad225a68a634c9ea8c7" kindref="member">SIL_sParam_t</ref></type>
        <definition>SIL_sParam_t SIL_Parameters[]</definition>
        <argsstring>[]</argsstring>
        <name>SIL_Parameters</name>
        <initializer>= <ref refid="lib_epc_control_8h_1a7c2f4c041f12cff2bdc76a124fac163a" kindref="member">SIL_PARAMETERS_DEFAULTS</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="172" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" prot="public" static="no" mutable="no">
        <type><ref refid="lib_epc_control_8h_1adc106917d4b7e38833c410ab2a4282f9" kindref="member">SIL_sPorts_t</ref></type>
        <definition>SIL_sPorts_t SIL_Ports</definition>
        <argsstring></argsstring>
        <name>SIL_Ports</name>
        <initializer>= <ref refid="lib_epc_control_8h_1a18cd38012e645a9dc030b596eef8d6e7" kindref="member">SIL_PORTS_DEFAULTS</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="173" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib_epc_control_8c_1a97997d53d31689876fc4dcfeb4593fae" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SIL_DummyInp[32U]</definition>
        <argsstring>[32U]</argsstring>
        <name>SIL_DummyInp</name>
        <initializer>= { 0.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="175" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib_epc_control_8c_1abc662aed0c31c74423cf4bb641696386" prot="public" static="yes" mutable="no">
        <type>double</type>
        <definition>double SIL_DummyOut[32U]</definition>
        <argsstring>[32U]</argsstring>
        <name>SIL_DummyOut</name>
        <initializer>= { 0.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="176" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib_epc_control_8c_1a489be31e0b95a0b3ff8f2c4fed25ff38" prot="public" static="yes" mutable="no">
        <type><ref refid="lib_epc_control_8c_1a7ed97dea947336ca74b74780fb21e48b" kindref="member">SIL_sTaskGroup_t</ref></type>
        <definition>SIL_sTaskGroup_t SIL_TaskGroups[]</definition>
        <argsstring>[]</argsstring>
        <name>SIL_TaskGroups</name>
        <initializer>= <ref refid="lib_epc_control_8c_1a73217f13108e9859b06c1082d832d5fb" kindref="member">SIL_TASK_GROUPS_DEFAULTS</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="178" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* SIL_SnapshotFile</definition>
        <argsstring></argsstring>
        <name>SIL_SnapshotFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="180" column="33" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib_epc_control_8c_1af0fe4affddb768264dd9a710510f3bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void system_main</definition>
        <argsstring>(void)</argsstring>
        <name>system_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="189" column="13" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="189" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ad9bda3cab726f79b7c06a60441554998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AD1D_SIL_writeSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>AD1D_SIL_writeSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="190" column="13" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="190" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1aceb6ad89b9571df43544631e548e0228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AD1D_SIL_readSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>AD1D_SIL_readSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="191" column="13" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="191" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a366bea37699901e8e0f83572c121e5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AD2D_SIL_writeSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>AD2D_SIL_writeSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="192" column="13" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="192" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a1e14b3d0dc196f803eddbdaf9694e990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AD2D_SIL_readSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>AD2D_SIL_readSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="193" column="13" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="193" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ad0d9aed88267f1f1a178979ff32f3a06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void runTaskContextHandlers</definition>
        <argsstring>(double const tNow, SIL_eTaskContext_t const eContext)</argsstring>
        <name>runTaskContextHandlers</name>
        <param>
          <type>double const</type>
          <declname>tNow</declname>
        </param>
        <param>
          <type><ref refid="lib_epc_control_8c_1a3210e1f49d48170d6b757cb502986256" kindref="member">SIL_eTaskContext_t</ref> const</type>
          <declname>eContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="872" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="872" bodyend="884" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="199" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a9462bd77d0dc433746125b642007ef4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validateFixedSampleTime</definition>
        <argsstring>(double tStep)</argsstring>
        <name>validateFixedSampleTime</name>
        <param>
          <type>double</type>
          <declname>tStep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="889" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="889" bodyend="907" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="200" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a02d66aa3caa43f63e7f4435d7ddfc1a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validatePortPointers</definition>
        <argsstring>(void)</argsstring>
        <name>validatePortPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="911" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="911" bodyend="929" declfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" declline="201" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ab81a90ab6353010bbcbfbe378b6c133b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SIL_initializeLibrary</definition>
        <argsstring>(double tStep, SIL_eSolverType_t solverType, SIL_eModelIntent_t mdlIntent, char *pmvsPath)</argsstring>
        <name>SIL_initializeLibrary</name>
        <param>
          <type>double</type>
          <declname>tStep</declname>
        </param>
        <param>
          <type><ref refid="lib_epc_control_8h_1a3dd3ad23a360da9c6163594f679ab08b" kindref="member">SIL_eSolverType_t</ref></type>
          <declname>solverType</declname>
        </param>
        <param>
          <type><ref refid="lib_epc_control_8h_1a2fb84a2675f90cb1a951ff0ae4772f01" kindref="member">SIL_eModelIntent_t</ref></type>
          <declname>mdlIntent</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pmvsPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="207" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="207" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ace37954380efd0cc545d686525f44253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_terminateLibrary</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_terminateLibrary</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="399" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="399" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ae7faa4e53156bb74ada32b2980fdc965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double SIL_getNextSampleHit</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_getNextSampleHit</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="406" column="8" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a4516f98eb48b67f3cfac58f6f506395b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="416" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ac996ef11ecaea694174e16c084e34121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_ts</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_ts</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="423" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="423" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a0ee7728e508048a3431cbe5591a6fe6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_200us</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_200us</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="450" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="450" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a75ff58ce3d5d4580e490ef7a69007e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_1ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_1ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="476" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="476" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ae7e96e5405835166c40c25a724ec7439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_10ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_10ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="520" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="520" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a6fa1fbbfa14569f4bd41950a860eb75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_100ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_100ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="546" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="546" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a01c7e531ea48b2b39560b8232dadb472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateOutput_1s</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateOutput_1s</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="553" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="553" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a4bba7ed7d059aaea97ea7739d4a8aadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="563" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="563" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a2825be5948559ec4590c28ede64e4450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_ts</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_ts</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="570" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="570" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a59eac95bc7334b0a03715fe1cfbbcca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_200us</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_200us</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="578" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="578" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a771f5694ced82f12c455c9aa7b09e8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_1ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_1ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="599" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="599" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ad4d3c47eb9a2d78a7c7042067d358d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_10ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_10ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="652" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="652" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a06036b1f582360534fabe0accf99ddcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_100ms</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_100ms</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="659" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="659" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a2838f5346d7b4916cd601c41594fc05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_updateState_1s</definition>
        <argsstring>(double tNow)</argsstring>
        <name>SIL_updateState_1s</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="666" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="666" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a3f337ca55a1e439329bc2b11fabbd673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_SIL_writeSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>SIL_SIL_writeSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="677" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="677" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1aeab96a996fe49fffa8e45559025012b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_SIL_readSnapshot</definition>
        <argsstring>(FILE *snapshotFile)</argsstring>
        <name>SIL_SIL_readSnapshot</name>
        <param>
          <type>FILE *</type>
          <declname>snapshotFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="701" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="701" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a5509b491627e5f7ee27c25815ac07c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_writeSnapshot</definition>
        <argsstring>(double tNow, uint16_t instanceNumber, char *tempPath)</argsstring>
        <name>SIL_writeSnapshot</name>
        <param>
          <type>double</type>
          <declname>tNow</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>instanceNumber</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tempPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="721" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="721" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1a296ff2009cd74a2c451a2bcded01dff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_readSnapshot</definition>
        <argsstring>(uint16_t instanceNumber, char *tempPath)</argsstring>
        <name>SIL_readSnapshot</name>
        <param>
          <type>uint16_t</type>
          <declname>instanceNumber</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>tempPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="790" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="790" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="lib_epc_control_8c_1ad56504ca7eecddc4addf6b342e0d6370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SIL_diagPrintf</definition>
        <argsstring>(const char *msg,...)</argsstring>
        <name>SIL_diagPrintf</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" line="863" column="6" bodyfile="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c" bodystart="863" bodyend="864"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/><sp/>#########<sp/><sp/><sp/><sp/>#########<sp/><sp/><sp/><sp/>#########<sp/><sp/><sp/>########<sp/><sp/><sp/><sp/><sp/><sp/>#######<sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/>#########<sp/><sp/><sp/>#######</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/>##</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>#<sp/>########<sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##########<sp/><sp/>##</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/><sp/><sp/><sp/>##<sp/><sp/>##<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/><sp/>#########<sp/><sp/><sp/>#<sp/>########<sp/><sp/><sp/><sp/>#########<sp/><sp/>##<sp/>######<sp/><sp/><sp/><sp/><sp/><sp/>#######<sp/><sp/><sp/><sp/><sp/>######<sp/><sp/>######<sp/><sp/><sp/><sp/>#########<sp/><sp/>##</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPANY<sp/>CONFIDENTIAL</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>document<sp/>contains<sp/>information<sp/>proprietary<sp/>to<sp/>EPC<sp/>Power.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>an<sp/>unpublished<sp/>work<sp/>subject<sp/>to<sp/>trade<sp/>secret<sp/>and<sp/>copyright<sp/>protection.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>addition,<sp/>the<sp/>information<sp/>may<sp/>be<sp/>the<sp/>subject<sp/>of<sp/>patent<sp/>applications</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>United<sp/>States<sp/>and<sp/>foreign<sp/>countries.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>M<sp/>O<sp/>D<sp/>U<sp/>L<sp/>E<sp/><sp/><sp/><sp/>D<sp/>E<sp/>S<sp/>C<sp/>R<sp/>I<sp/>P<sp/>T<sp/>I<sp/>O<sp/>N</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Filename<sp/><sp/><sp/><sp/><sp/>:<sp/>libEpcControl.c</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Full<sp/>Name<sp/><sp/><sp/><sp/>:<sp/>Package::SubPackage::..::Class</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>Prefix<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SIL_</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Description<sp/><sp/>:<sp/>EPC<sp/>SIL<sp/>Library<sp/>-<sp/>this<sp/>library<sp/>implements<sp/>the<sp/>top-level<sp/>methods<sp/>required<sp/>to<sp/>operate<sp/>the</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entirety<sp/>of<sp/>the<sp/>EPC<sp/>Converter<sp/>Controls<sp/>software<sp/>(with<sp/>the<sp/>exception<sp/>of<sp/>the<sp/>communica-</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tion<sp/>portions<sp/>of<sp/>the<sp/>software)<sp/>within<sp/>the<sp/>context<sp/>of<sp/>a<sp/>dynamic<sp/>simulation<sp/>environment</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>such<sp/>as<sp/>PLECS,<sp/>Simulink,<sp/>PSCAD,<sp/>etc.<sp/>Note<sp/>this<sp/>is<sp/>the<sp/>&quot;top-level&quot;<sp/>because<sp/>several</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional<sp/>layers<sp/>of<sp/>emulation<sp/>are<sp/>also<sp/>implemented<sp/>alongside<sp/>this<sp/>library<sp/>which</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>either<sp/>supplement<sp/>or<sp/>replace<sp/>normal<sp/>&quot;target&quot;<sp/>(control<sp/>board)<sp/>drivers<sp/>to<sp/>provide<sp/>an</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emulation<sp/>of<sp/>those<sp/>underlying<sp/>required<sp/>features<sp/>provided<sp/>by<sp/>the<sp/>target<sp/>hardware;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exempli<sp/>gratia,<sp/>PWM<sp/>emulation,<sp/>on-DSP<sp/>and<sp/>off-DSP<sp/>ADC<sp/>emulation,<sp/>IQ<sp/>Math<sp/>library</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emulation,<sp/>CPU<sp/>timer<sp/>emulation,<sp/>and<sp/>CPU<sp/>control<sp/>registers<sp/>emulation.<sp/>Herein,<sp/>we<sp/>use</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>parameters,<sp/>inputs,<sp/>and<sp/>outputs<sp/>which<sp/>are<sp/>initialized<sp/>by<sp/>reference<sp/>with<sp/>the<sp/>user</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>application/simulation<sp/>to<sp/>mimic<sp/>the<sp/>real<sp/>inputs<sp/>and<sp/>outputs<sp/>of<sp/>the<sp/>target<sp/>hardware.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameterization<sp/>of<sp/>the<sp/>controls<sp/>is<sp/>by<sp/>way<sp/>of<sp/>read-in<sp/>PMVS,<sp/>which<sp/>file<sp/>path<sp/>is</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specified<sp/>at<sp/>initialization.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>D.<sp/>Michaud</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>History<sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Date<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Description</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>14.01.2019<sp/><sp/><sp/>D.<sp/>Michaud<sp/><sp/><sp/><sp/><sp/><sp/>Initial<sp/>Version</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Include<sp/>Files</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>absf,<sp/>roundf,<sp/>etc.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>sprintf_s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib_epc_control_8h" kindref="compound">libEpcControl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib_epc_control_interface_8h" kindref="compound">libEpcControlInterface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="application_8h" kindref="compound">application.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;channelMappingManagerI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;topLevelControlI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;topLevelControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;powerConversionControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phaseConfigDetectI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phaseControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filterObserverI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phasePll.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;auxiliaryPllI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;islandControlI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protectedBusControlI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phaseCurrentControlI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;adaptiveHarmonicControlI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;referenceHandler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;afe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phaseSharedData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;modulator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scheduler__emu_8h" kindref="compound">scheduler_emu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gridMonitor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protectionsI.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;deviceThermalModel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;measurementd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="epwm__emu_8h" kindref="compound">epwm_emu.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hardware.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hardwareScales.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;supervisor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;protections.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;externalInhibit.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interface_accessors_8h" kindref="compound">interfaceAccessors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;phaseConfigDetect.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;syntheticInertia.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>Constant<sp/>Defines</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_EPSILON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>0.1e-9L<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_SNAPSHOT_FILENAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;snapshot_data&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_SNAPSHOT_FILE_EXTENSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;.dat&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>Macro<sp/>Defines</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_TASK_HANDLER_DEFAULTS(mCbk)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.tCallLast<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.taskCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mCbk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_TASK_HANDLERS_DEFAULTS(mGrp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[SIL_TASK_CONTEXT_OUTPUT]<sp/><sp/><sp/>=<sp/>SIL_TASK_HANDLER_DEFAULTS(SIL_updateOutput_##mGrp),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[SIL_TASK_CONTEXT_STATE]<sp/><sp/><sp/><sp/>=<sp/>SIL_TASK_HANDLER_DEFAULTS(SIL_updateState_##mGrp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_TASK_GROUP_DEFAULTS(mGrp,<sp/>mPer)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.tPeriod<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mPer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.nHandlers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.taskHandlers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SIL_TASK_HANDLERS_DEFAULTS(mGrp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_TASK_GROUP_DEFAULT(mGrp,<sp/>mPer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[SIL_TASK_GROUP_##mGrp]<sp/><sp/><sp/><sp/><sp/>=<sp/>SIL_TASK_GROUP_DEFAULTS(mGrp,<sp/>mPer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_TASK_GROUPS_DEFAULTS(...)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(ts,<sp/><sp/><sp/><sp/><sp/>150e-6),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(200us,<sp/><sp/>200e-6),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(1ms,<sp/><sp/><sp/><sp/>1.0e-3),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(10ms,<sp/><sp/><sp/>10.0e-3),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(100ms,<sp/><sp/>100.0e-3),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_TASK_GROUP_DEFAULT(1s,<sp/><sp/><sp/><sp/><sp/>1000.0e-3),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>##__VA_ARGS__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIL_UPDATE_TOGGLE(mGrp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>bool<sp/>updateToggle<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SIL_PORT_OUT(SIL_OUT_CTL_CDIR,<sp/>mGrp)<sp/><sp/><sp/><sp/>=<sp/><sp/>updateToggle;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>updateToggle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>!updateToggle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>Type<sp/>Definitions</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0" kindref="member">SIL_TaskContext_e</ref><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0a29f3a1246607f135de9c112ae2258e8a" kindref="member">SIL_TASK_CONTEXT_OUTPUT</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0abeaa7ea1b3e75063a32888ba135cac51" kindref="member">SIL_TASK_CONTEXT_STATE</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0aabf0e2f1d319c42f4eb74f8795897373" kindref="member">SIL_TASK_CONTEXT_CNT</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><ref refid="lib_epc_control_8c_1a3210e1f49d48170d6b757cb502986256" kindref="member">SIL_eTaskContext_t</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<sp/><ref refid="lib_epc_control_8c_1ae6f17a342abe900c59d650833838087c" kindref="member">SIL_fTaskCallback_t</ref>)(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct_s_i_l___task_handler__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_i_l___task_handler__s" kindref="compound">SIL_TaskHandler_s</ref><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_handler__s_1a83e576ac97d0e1fd408e6417aefe659a" kindref="member">tCallLast</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1ae6f17a342abe900c59d650833838087c" kindref="member">SIL_fTaskCallback_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_handler__s_1a7793cf5336e0ac983f3336229f436355" kindref="member">taskCallback</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><ref refid="lib_epc_control_8c_1ae89a63ad9fd5e364d8b48eb25eef9757" kindref="member">SIL_sTaskHandler_t</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="struct_s_i_l___task_group__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_i_l___task_group__s" kindref="compound">SIL_TaskGroup_s</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_group__s_1a982ad70934e0c0f81b23012c022654bc" kindref="member">tPeriod</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_group__s_1ac618d48d30ceba9446209d6088212a30" kindref="member">nHandlers</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_handler__s" kindref="compound">SIL_sTaskHandler_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_group__s_1a0778f75f0941a6b7facad2e87cd11f24" kindref="member">taskHandlers</ref>[<ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0aabf0e2f1d319c42f4eb74f8795897373" kindref="member">SIL_TASK_CONTEXT_CNT</ref>];</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/><ref refid="lib_epc_control_8c_1a7ed97dea947336ca74b74780fb21e48b" kindref="member">SIL_sTaskGroup_t</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>Global<sp/>Variable<sp/>Declarations</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="struct_s_i_l___param__s" kindref="compound">SIL_sParam_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1ab657a19b95f6cfab5a555d5d503c0b3e" kindref="member">SIL_Parameters</ref>[]<sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a7c2f4c041f12cff2bdc76a124fac163a" kindref="member">SIL_PARAMETERS_DEFAULTS</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="struct_s_i_l___ports__s" kindref="compound">SIL_sPorts_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a18cd38012e645a9dc030b596eef8d6e7" kindref="member">SIL_PORTS_DEFAULTS</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIL_DummyInp[32U]<sp/><sp/><sp/>=<sp/>{<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIL_DummyOut[32U]<sp/><sp/><sp/>=<sp/>{<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_s_i_l___task_group__s" kindref="compound">SIL_sTaskGroup_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIL_TaskGroups[]<sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8c_1a73217f13108e9859b06c1082d832d5fb" kindref="member">SIL_TASK_GROUPS_DEFAULTS</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">FILE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>Imported<sp/>Variables</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>Imported<sp/>Functions</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1af0fe4affddb768264dd9a710510f3bc8" kindref="member">system_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ad9bda3cab726f79b7c06a60441554998" kindref="member">AD1D_SIL_writeSnapshot</ref>(FILE*<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1aceb6ad89b9571df43544631e548e0228" kindref="member">AD1D_SIL_readSnapshot</ref>(FILE*<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a366bea37699901e8e0f83572c121e5d0" kindref="member">AD2D_SIL_writeSnapshot</ref>(FILE*<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a1e14b3d0dc196f803eddbdaf9694e990" kindref="member">AD2D_SIL_readSnapshot</ref>(FILE*<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>Forward<sp/>Declarations</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runTaskContextHandlers(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tNow,<sp/><ref refid="lib_epc_control_8c_1a3210e1f49d48170d6b757cb502986256" kindref="member">SIL_eTaskContext_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eContext);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validateFixedSampleTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStep);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validatePortPointers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************************</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>Local<sp/>Functions</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ab81a90ab6353010bbcbfbe378b6c133b" kindref="member">SIL_initializeLibrary</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStep,<sp/><ref refid="lib_epc_control_8h_1a3dd3ad23a360da9c6163594f679ab08b" kindref="member">SIL_eSolverType_t</ref><sp/>solverType,<sp/><ref refid="lib_epc_control_8h_1a2fb84a2675f90cb1a951ff0ae4772f01" kindref="member">SIL_eModelIntent_t</ref><sp/>mdlIntent,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pmvsPath)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bConfigOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Library<sp/>Configuration<sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>PMVS<sp/>load<sp/>(variables<sp/>only)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_interface_8h_1a0a34752190321c6d532b08678991cf02" kindref="member">SIL_loadPmvs</ref>(pmvsPath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mdlIntent)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a9d01562d58954e7706d3de172b37562ba2df8b4b3304c6d0e365e0fd460ab3780" kindref="member">SIL_MODEL_INTENT_SWITCHED</ref>:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Initializing<sp/>Switched<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a9d01562d58954e7706d3de172b37562ba6580cbabc0e59966d19d62a57017ed8f" kindref="member">SIL_MODEL_INTENT_AVERAGED</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Initializing<sp/>Averaged<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CMM_ConfigI.hdwVariantName)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_LC12_6:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LC12-6<sp/>Power<sp/>Module:<sp/>Six-Terminal,<sp/>Six<sp/>Non-Paralleled<sp/>2L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;LC12-6<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_LC12_3:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LC12-3<sp/>Power<sp/>Module:<sp/>Three-Terminal,<sp/>Three<sp/>2x<sp/>Hard-Paralleled<sp/>2L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;LC12-3<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_LC13_3:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CAB1000-3L<sp/>Power<sp/>Module:<sp/>Three-Terminal,<sp/>Three<sp/>Non-Paralleled<sp/>3L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;CAB1000-3L<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_LC13_2:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CAB1000-2L<sp/>Power<sp/>Module:<sp/>Three-Terminal,<sp/>Three<sp/>2x<sp/>Hard-Paralleled<sp/>2L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;CAB1000-2L<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_PD500:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PD500<sp/>Power<sp/>Stage:<sp/>Three-Terminal,<sp/>Three<sp/>2x<sp/>Hard-Paralleled<sp/>2L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;PD500<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CMM_HARDWARE_VARIANT_PD250:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PD250<sp/>Power<sp/>Stage:<sp/>Three-Terminal,<sp/>Three<sp/>Non-Paralleled<sp/>2L<sp/>Half-Bridges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;PD250<sp/>Model<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(solverType)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6a1c7298d6f6016b614baa0a180ef77e80" kindref="member">SIL_SOLVER_TYPE_VARIABLE_MULTIRATE</ref>:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;for<sp/>Variable<sp/>Multi-rate<sp/>Solver.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6afc670ce0c6f762e1e84d79fd2b41f183" kindref="member">SIL_SOLVER_TYPE_VARIABLE</ref>:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ac87af9dc4e1a2b96a73588443fd36aa1" kindref="member">SIL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;for<sp/>Variable<sp/>Single-rate<sp/>Solver...<sp/>NOT<sp/>SUPPORTED!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bConfigOk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6ae3685caa4ef65143b616476ec57e3d2b" kindref="member">SIL_SOLVER_TYPE_FIXED_MULTIRATE</ref>:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ac87af9dc4e1a2b96a73588443fd36aa1" kindref="member">SIL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;for<sp/>Fixed<sp/>Multi-rate<sp/>Solver...<sp/>NOT<sp/>SUPPORTED!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bConfigOk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6a3366082b4a36688431436954ae6908ab" kindref="member">SIL_SOLVER_TYPE_FIXED</ref>:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;for<sp/>Fixed<sp/>Single-rate<sp/>Solver.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bConfigOk<sp/>=<sp/>validateFixedSampleTime(tStep);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>validatePortPointers();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**************************************************************************</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SIL<sp/>Invocation<sp/>*********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Manipulate<sp/>statically<sp/>initialized<sp/>globals:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="application_8c_1a12358381f3cac018871d7c6b73a404ff" kindref="member">eeHandlerUseDefaults</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>Thermal<sp/>Model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>DTM_ConfigDataI.disableThermalModel<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bring<sp/>up<sp/>system,<sp/>controls<sp/>and<sp/>emulators...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af0fe4affddb768264dd9a710510f3bc8" kindref="member">system_main</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1a5c7955b8e45b9f13c3f3193d51c47126" kindref="member">EPWM_Initialize</ref>(0.0,<sp/>solverType<sp/>==<sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6a3366082b4a36688431436954ae6908ab" kindref="member">SIL_SOLVER_TYPE_FIXED</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1a4d6d96ea4ff3517fec41d53226ba465f" kindref="member">EPWM_SetParamAverageMode</ref>(mdlIntent<sp/>==<sp/><ref refid="lib_epc_control_8h_1a9d01562d58954e7706d3de172b37562ba6580cbabc0e59966d19d62a57017ed8f" kindref="member">SIL_MODEL_INTENT_AVERAGED</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PMVS-Unsupported<sp/>Parameters<sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.9.1.1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)APL_setCommonConfigCoeffsLF(45.0,<sp/>160e-3);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)APL_setCommonConfigLimitsLF(110.0,<sp/>90.0);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.9.1.2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)APL_setCommonConfigLockDetect(35.0,<sp/>50e-3,<sp/>200e-3);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.9.1.3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)APL_setCommonConfigCoeffsQSG(1.0,<sp/>0.0,<sp/>2.0e-3);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.9.1.4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)APL_setCommonConfigMeasAdjust(30.0,<sp/>1.00);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINVERTER,<sp/><sp/><sp/>PROT_OPER_STATE_RUNNING,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINVERTER,<sp/><sp/><sp/>PROT_OPER_STATE_STOPPED,<sp/>0.0f,<sp/>0.0f,<sp/>10.0f);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINTERNAL,<sp/><sp/><sp/>PROT_OPER_STATE_RUNNING,<sp/>0.0f,<sp/>0.0f,<sp/>30.0f);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINTERNAL,<sp/><sp/><sp/>PROT_OPER_STATE_STOPPED,<sp/>0.0f,<sp/>0.0f,<sp/>300.0f);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TDEVICE,<sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_RUNNING,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TDEVICE,<sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_STOPPED,<sp/>0.0f,<sp/>0.0f,<sp/>10.0f);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINLET,<sp/><sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_RUNNING,<sp/>0.0f,<sp/>0.0f,<sp/>15.0f);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TINLET,<sp/><sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_STOPPED,<sp/>0.0f,<sp/>0.0f,<sp/>30.0f);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TDELTA,<sp/><sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_RUNNING,<sp/>0.0f,<sp/>0.0f,<sp/>15.0f);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_setTemperatureLimitThresholds(PROT_TEMP_LIMIT_TDELTA,<sp/><sp/><sp/><sp/><sp/><sp/>PROT_OPER_STATE_STOPPED,<sp/>0.0f,<sp/>0.0f,<sp/>30.0f);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/***************************************************************************</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SIL<sp/>Parameterization<sp/>****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Secondary<sp/>PMVS<sp/>load<sp/>(setters<sp/>called)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_interface_8h_1a0a34752190321c6d532b08678991cf02" kindref="member">SIL_loadPmvs</ref>(pmvsPath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>FAULT_CLEARALL();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_interface_8h_1a0a34752190321c6d532b08678991cf02" kindref="member">SIL_loadPmvs</ref>(pmvsPath,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(solverType<sp/>==<sp/><ref refid="lib_epc_control_8h_1a7c690e2e7f450fe5e100746ad4f59aa6a3366082b4a36688431436954ae6908ab" kindref="member">SIL_SOLVER_TYPE_FIXED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)MOD_setAcFSwRequest(0U,<sp/>3333.3333);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)MOD_setAcSyncEnable(0U,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>PRECHARGE_DC;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeRelay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>IOH_RELAY_K1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeRelaySec<sp/><sp/><sp/><sp/><sp/>=<sp/>IOH_RELAY_K2;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>250;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.abortTime<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeTimeExtn<sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.busStabDelaySec<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.prechargeParams.prechargeTimeSec<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>afe_setPrechargeMin(50.0f);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>afe_setPrechargeDeltaMax(10.0f);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>afe_setPrechargeRise(0.0f);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>afe_setPrechargeConfig();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_MX1].close<sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_MX1].open<sp/><sp/><sp/><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_MX2].close<sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_MX2].open<sp/><sp/><sp/><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_K1].close<sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_K1].open<sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_K2].close<sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.relayDelays[IOH_RELAY_K2].open<sp/><sp/><sp/><sp/><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Augen<sp/>verdrehen...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>PPC_setCommonConfigEnergizeDelay(ioParams.relayDelays[IOH_RELAY_MX1].close);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_setMx1Feedback(0);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_setMx2Feedback(0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_setK1Feedback(0);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_setK2Feedback(0);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.diInvert[DI_THERMAL_EN]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ioParams.diInvert[DI_ESTOP_OK]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>hwDef.useDigitalPump<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>FLT_CFG_ARRAY_LENGTH;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="application_8c_1aa9c39f99a87f5a9bd9b27fe269b1de04" kindref="member">appFaultConfiguration</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="application_8c_1aae45035e0712c66641eda8c3b74e64d8" kindref="member">APP_setFaultConfig</ref>(0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_init();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bConfigOk;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ace37954380efd0cc545d686525f44253" kindref="member">SIL_terminateLibrary</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1ae4484d7085296d45e76ee9bb0b246c71" kindref="member">EPWM_Terminate</ref>(tNow);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ae7faa4e53156bb74ada32b2980fdc965" kindref="member">SIL_getNextSampleHit</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="epwm__emu_8c_1a177a27247999a85001e98fda816cef2e" kindref="member">EPWM_GetNextSolverHit</ref>(tNow);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>Output<sp/>Context<sp/>*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a4516f98eb48b67f3cfac58f6f506395b" kindref="member">SIL_updateOutput</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>runTaskContextHandlers(tNow,<sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0a29f3a1246607f135de9c112ae2258e8a" kindref="member">SIL_TASK_CONTEXT_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ac996ef11ecaea694174e16c084e34121" kindref="member">SIL_updateOutput_ts</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHalfPeriodEvent<sp/>=<sp/><ref refid="epwm__emu_8c_1affefd814056482f0d96b74e4e906230e" kindref="member">EPWM_Output</ref>(tNow);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isHalfPeriodEvent)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aa32730ef97c9a8eb5e1328ffa03f734f" kindref="member">SIL_OUT_STA_CTL</ref>,<sp/>2)<sp/>=<sp/>faultStat.all;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a0f8ae69e9b83f36442d4c1b6556f752f" kindref="member">SIL_OUT_FBK_PIC</ref>,<sp/>i)<sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.comp.pI_sum.ele[i],<sp/>PU_IPH_FSR);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a9e0b5933f169819ce830970348b6f0e6" kindref="member">SIL_OUT_FBK_PVL</ref>,<sp/>i)<sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.meas.pV_hi.ele[i],<sp/><sp/>PU_VPH_FSR);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ad2d8ec2934bfb655769114ac9a3b8c08" kindref="member">SIL_OUT_FBK_PVR</ref>,<sp/>i)<sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.meas.pV_lo.ele[i],<sp/><sp/>PU_VPH_FSR);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a9fdb763a801f238b3dc4d5f875aa6f3f" kindref="member">SIL_OUT_MON_DCVI</ref>,<sp/>0)<sp/><sp/><sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.meas.dcV.cmp.sum,<sp/><sp/>PU_VDC_FSR);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a9fdb763a801f238b3dc4d5f875aa6f3f" kindref="member">SIL_OUT_MON_DCVI</ref>,<sp/>1)<sp/><sp/><sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.meas.dcV.cmp.pos1,<sp/>PU_VDC_FSR);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a9fdb763a801f238b3dc4d5f875aa6f3f" kindref="member">SIL_OUT_MON_DCVI</ref>,<sp/>2)<sp/><sp/><sp/>=<sp/>SCL_IQPU_FSI(MESD_Measurements.pri.ac.meas.dcV.cmp.neg1,<sp/>PU_VDC_FSR);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>internal<sp/>reference<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a4ed5ea8358d221bdd61b784200486398" kindref="member">SIL_OUT_REF</ref>,<sp/>0)<sp/>=<sp/>PCC_getFinalFrequencyRefHz_SI(CMM_AC_CONTROL_CHANNEL_U);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a4ed5ea8358d221bdd61b784200486398" kindref="member">SIL_OUT_REF</ref>,<sp/>1)<sp/>=<sp/>PCC_getFinalACVoltageRefSI(CMM_AC_CONTROL_CHANNEL_U);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a4ed5ea8358d221bdd61b784200486398" kindref="member">SIL_OUT_REF</ref>,<sp/>2)<sp/>=<sp/>PCC_getFinalIdRefSI(CMM_AC_CONTROL_CHANNEL_U);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a4ed5ea8358d221bdd61b784200486398" kindref="member">SIL_OUT_REF</ref>,<sp/>3)<sp/>=<sp/>PCC_getFinalIqRefSI(CMM_AC_CONTROL_CHANNEL_U);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a0ee7728e508048a3431cbe5591a6fe6e" kindref="member">SIL_updateOutput_200us</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" kindref="member">SIL_UPDATE_TOGGLE</ref>(<ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcad252ac161a55166b4499529360ce87c8" kindref="member">SIL_TASK_GROUP_200us</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tNow;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>9)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.eVg_act.mag;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>10)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.eVg_act.arg;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>11)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.eVg_act.w;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>12)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.pVg_act.u;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>13)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.pVg_act.v;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>14)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.pVg_act.w;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>15)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rIg_est.d;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>16)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rIg_est.q;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>17)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rPg_est.d;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>18)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rPg_est.q;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>19)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rIg_ref.d;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>20)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.rIg_ref.q;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a75ff58ce3d5d4580e490ef7a69007e21" kindref="member">SIL_updateOutput_1ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" kindref="member">SIL_UPDATE_TOGGLE</ref>(<ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcaf0d955c1cb8c3b7dd9a510ea3bf6dbd0" kindref="member">SIL_TASK_GROUP_1ms</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ac64960cc7a9d2805f2cd7b61ab6beae9" kindref="member">SIL_OUT_STA_PBC</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>PBC_getConnectSequenceStatus(0U);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3dc6e86c00cc451033a22a0f29c23f44" kindref="member">SIL_OUT_MON_FVR</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorFrequencyHz_SI(0U,<sp/>CMM_AC_NETWORK_REMOTE);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3dc6e86c00cc451033a22a0f29c23f44" kindref="member">SIL_OUT_MON_FVR</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridVoltageRms_SI(0U,<sp/>CMM_AC_NETWORK_REMOTE,<sp/>PCC_ACM_APPARENT,<sp/>PCC_ACM_PHASE);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3dc6e86c00cc451033a22a0f29c23f44" kindref="member">SIL_OUT_MON_FVR</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridVoltageRms_SI(0U,<sp/>CMM_AC_NETWORK_REMOTE,<sp/>PCC_ACM_APPARENT,<sp/>PCC_ACM_LINE);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3877128ecc7c07bbdfc485ffec628694" kindref="member">SIL_OUT_MON_FVL</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorFrequencyHz_SI(0U,<sp/>CMM_AC_NETWORK_LOCAL);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3877128ecc7c07bbdfc485ffec628694" kindref="member">SIL_OUT_MON_FVL</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridVoltageRms_SI(0U,<sp/>CMM_AC_NETWORK_LOCAL,<sp/>PCC_ACM_APPARENT,<sp/>PCC_ACM_PHASE);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a3877128ecc7c07bbdfc485ffec628694" kindref="member">SIL_OUT_MON_FVL</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridVoltageRms_SI(0U,<sp/>CMM_AC_NETWORK_LOCAL,<sp/>PCC_ACM_APPARENT,<sp/>PCC_ACM_LINE);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ac30210d0a725f78ec7f8f096a308f202" kindref="member">SIL_OUT_MON_RIG</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridCurrentRms_SI(0U,<sp/>PCC_ACM_REAL);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ac30210d0a725f78ec7f8f096a308f202" kindref="member">SIL_OUT_MON_RIG</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridCurrentRms_SI(0U,<sp/>PCC_ACM_REACTIVE);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ac30210d0a725f78ec7f8f096a308f202" kindref="member">SIL_OUT_MON_RIG</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridCurrentRms_SI(0U,<sp/>PCC_ACM_APPARENT);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ac30210d0a725f78ec7f8f096a308f202" kindref="member">SIL_OUT_MON_RIG</ref>,<sp/>3)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridCurrentRms_SI(0U,<sp/>PCC_ACM_ZEROSEQ);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ad935533f629e631c69c2a102637f8671" kindref="member">SIL_OUT_MON_RPG</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridPowerRms_SI(0U,<sp/>PCC_ACM_REAL);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ad935533f629e631c69c2a102637f8671" kindref="member">SIL_OUT_MON_RPG</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridPowerRms_SI(0U,<sp/>PCC_ACM_REACTIVE);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ad935533f629e631c69c2a102637f8671" kindref="member">SIL_OUT_MON_RPG</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridPowerRms_SI(0U,<sp/>PCC_ACM_APPARENT);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3ad935533f629e631c69c2a102637f8671" kindref="member">SIL_OUT_MON_RPG</ref>,<sp/>3)<sp/><sp/><sp/><sp/>=<sp/>PCC_getAcMonitorGridPowerRms_SI(0U,<sp/>PCC_ACM_ZEROSEQ);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a145b61c2dd3b1a19587ca4cd45dffb85" kindref="member">SIL_OUT_MON_SCI</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridCurrentCompRms_SI(XFM_VECT_SR_ELE_PS,<sp/>XFM_VECT_R_ELE_D);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a145b61c2dd3b1a19587ca4cd45dffb85" kindref="member">SIL_OUT_MON_SCI</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridCurrentCompRms_SI(XFM_VECT_SR_ELE_PS,<sp/>XFM_VECT_R_ELE_Q);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a145b61c2dd3b1a19587ca4cd45dffb85" kindref="member">SIL_OUT_MON_SCI</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridCurrentCompRms_SI(XFM_VECT_SR_ELE_NS,<sp/>XFM_VECT_R_ELE_D);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a145b61c2dd3b1a19587ca4cd45dffb85" kindref="member">SIL_OUT_MON_SCI</ref>,<sp/>3)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridCurrentCompRms_SI(XFM_VECT_SR_ELE_NS,<sp/>XFM_VECT_R_ELE_Q);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3af7453ef1bbe00b123147f93e1cb8dba5" kindref="member">SIL_OUT_MON_SCV</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridVoltageRms_SI(XFM_VECT_SC_ELE_PS);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3af7453ef1bbe00b123147f93e1cb8dba5" kindref="member">SIL_OUT_MON_SCV</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>REF_getAcMonitorScGridVoltageRms_SI(XFM_VECT_SC_ELE_NS);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a9fdb763a801f238b3dc4d5f875aa6f3f" kindref="member">SIL_OUT_MON_DCVI</ref>,<sp/>3)<sp/><sp/><sp/>=<sp/>PCC_getDcMonitorDcCurrent_SI();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GCS_getStateNumber();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.isFaulted;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>3)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.timeSinceLastComm;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>4)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.controlModeAccept;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>5)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.acNetworkStatus;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>6)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.isIslanded;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ae7e96e5405835166c40c25a724ec7439" kindref="member">SIL_updateOutput_10ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" kindref="member">SIL_UPDATE_TOGGLE</ref>(<ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcabd3a3af76eaf8f536a2eeca2aee82f11" kindref="member">SIL_TASK_GROUP_10ms</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a20b7ec65a59c24bee8ab459a98b49fc1" kindref="member">SIL_OUT_STA_GMR</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>gridMonitor_getNetworkStatus(CMM_AC_NETWORK_REMOTE);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a20b7ec65a59c24bee8ab459a98b49fc1" kindref="member">SIL_OUT_STA_GMR</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCD_getPhaseSequenceDetect(CMM_AC_NETWORK_REMOTE);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a20b7ec65a59c24bee8ab459a98b49fc1" kindref="member">SIL_OUT_STA_GMR</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCD_getPresetDisplacementDetect(CMM_AC_NETWORK_REMOTE);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a461b753bc509a9ea390811f4099022da" kindref="member">SIL_OUT_STA_GML</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>gridMonitor_getNetworkStatus(CMM_AC_NETWORK_LOCAL);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a461b753bc509a9ea390811f4099022da" kindref="member">SIL_OUT_STA_GML</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>PCD_getPhaseSequenceDetect(CMM_AC_NETWORK_LOCAL);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a461b753bc509a9ea390811f4099022da" kindref="member">SIL_OUT_STA_GML</ref>,<sp/>2)<sp/><sp/><sp/><sp/>=<sp/>PCD_getPresetDisplacementDetect(CMM_AC_NETWORK_LOCAL);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aa32730ef97c9a8eb5e1328ffa03f734f" kindref="member">SIL_OUT_STA_CTL</ref>,<sp/>0)<sp/><sp/><sp/><sp/>=<sp/>GCS_getStateNumber();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aa32730ef97c9a8eb5e1328ffa03f734f" kindref="member">SIL_OUT_STA_CTL</ref>,<sp/>1)<sp/><sp/><sp/><sp/>=<sp/>warningStat.all;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a415d9ba9009591e374d6585c28309f6a" kindref="member">SIL_OUT_CTL_RLAY</ref>,<sp/>0)<sp/><sp/><sp/>=<sp/>ozFpga.relayCfg.bit.EN_0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a415d9ba9009591e374d6585c28309f6a" kindref="member">SIL_OUT_CTL_RLAY</ref>,<sp/>1)<sp/><sp/><sp/>=<sp/>ozFpga.relayCfg.bit.EN_1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a415d9ba9009591e374d6585c28309f6a" kindref="member">SIL_OUT_CTL_RLAY</ref>,<sp/>2)<sp/><sp/><sp/>=<sp/>ozFpga.relayCfg.bit.EN_2;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a415d9ba9009591e374d6585c28309f6a" kindref="member">SIL_OUT_CTL_RLAY</ref>,<sp/>3)<sp/><sp/><sp/>=<sp/>ozFpga.relayCfg.bit.EN_3;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>7)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.isPhaseLocked;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1a87354ee0fb8bdc7c1cd428e24ef98bc3" kindref="member">SIL_PORT_OUT</ref>(<ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3a23fc413006a1ead7f31a5e6d4bb1bba1" kindref="member">SIL_OUT_CUST</ref>,<sp/>8)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TLC_ProcessDataOut.xIg_lim;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a6fa1fbbfa14569f4bd41950a860eb75a" kindref="member">SIL_updateOutput_100ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" kindref="member">SIL_UPDATE_TOGGLE</ref>(<ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdca52ea4ad9e046ceb4545a1bf27689be6a" kindref="member">SIL_TASK_GROUP_100ms</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a01c7e531ea48b2b39560b8232dadb472" kindref="member">SIL_updateOutput_1s</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1af27efe74bbbc92dd505ed6feb632c2f4" kindref="member">SIL_UPDATE_TOGGLE</ref>(<ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcac3d16ad5a1cedf24b10ea359023f034c" kindref="member">SIL_TASK_GROUP_1s</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>Input/Update<sp/>Context<sp/>*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a4bba7ed7d059aaea97ea7739d4a8aadf" kindref="member">SIL_updateState</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>runTaskContextHandlers(tNow,<sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0abeaa7ea1b3e75063a32888ba135cac51" kindref="member">SIL_TASK_CONTEXT_STATE</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a2825be5948559ec4590c28ede64e4450" kindref="member">SIL_updateState_ts</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>SCH_silFakeoutProfilerTimer(tNow);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1ad6d064f34ac3f3621d40e69739eec80c" kindref="member">EPWM_Update</ref>(tNow);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a59eac95bc7334b0a03715fe1cfbbcca1" kindref="member">SIL_updateState_200us</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TLC_Data.config.ctlVariantName<sp/>&gt;<sp/>TLC_CONTROL_VARIANT_NONE)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.rIg_ref.d<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.rIg_ref.q<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.eVg_ref.mag<sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.eVg_ref.arg<sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.eVg_ref.w<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TLC_ProcessDataIn.eVg_ref.mag<sp/>&lt;<sp/>15.0f)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.eVg_ref.mag<sp/>=<sp/>15.0f;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scheduler__emu_8h_1a75735a8b34406af1b36b905d29a7751c" kindref="member">SCH_taskHandler_100US</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>SCH_backgroundTaskUpdate();</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a771f5694ced82f12c455c9aa7b09e8a4" kindref="member">SIL_updateState_1ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TLC_Data.config.ctlVariantName<sp/>&gt;<sp/>TLC_CONTROL_VARIANT_NONE)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TLC_ProcessDataIn.controlModeRequest<sp/>=<sp/>(TLC_eControlMode_t)<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7b3c68ecc26512f1ed539c4ea88cc773" kindref="member">SIL_INP_CUST</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setPps(0.0f);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setQps(0.0f);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIdPs(0.0f);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIqPs(0.0f);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8h_1ab6df339cd48acc4113a2b007b666a688" kindref="member">SIL_eControlMode_t</ref><sp/>runRequest<sp/>=<sp/>(<ref refid="lib_epc_control_8h_1ab6df339cd48acc4113a2b007b666a688" kindref="member">SIL_eControlMode_t</ref>)<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea7166aff228702dc13caf5967626efaa1" kindref="member">SIL_INP_CTL_RUN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systemSetMasterEnable(runRequest<sp/>&gt;<sp/><ref refid="lib_epc_control_8h_1aff2f14d2a43919fc9074824004594649a6cb07d8d85a5e8971fef51c675588304" kindref="member">SIL_CONTROL_MODE_INACTIVE</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(runRequest)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1aff2f14d2a43919fc9074824004594649adccd557e1aab5f27d67e94ed78824b94" kindref="member">SIL_CONTROL_MODE_POWER</ref>:</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setControlMode(REF_CONTROL_MODE_CURRENT);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIdPs(0.0f);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIqPs(0.0f);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setPps(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea82acb03b55e5ebb711dfa1dfccb49590" kindref="member">SIL_INP_REF_RPG</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setQps(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea82acb03b55e5ebb711dfa1dfccb49590" kindref="member">SIL_INP_REF_RPG</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1aff2f14d2a43919fc9074824004594649a70c434e6626cb8b803cf6acd6a37b7f4" kindref="member">SIL_CONTROL_MODE_CURRENT</ref>:</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setControlMode(REF_CONTROL_MODE_CURRENT);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setPps(0.0f);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setQps(0.0f);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIdPs(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea6a0fca72779f012fff2c8ea0e5c00986" kindref="member">SIL_INP_REF_RIG</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIqPs(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea6a0fca72779f012fff2c8ea0e5c00986" kindref="member">SIL_INP_REF_RIG</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIdNs(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea6a0fca72779f012fff2c8ea0e5c00986" kindref="member">SIL_INP_REF_RIG</ref>,<sp/>2));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setIqNs(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea6a0fca72779f012fff2c8ea0e5c00986" kindref="member">SIL_INP_REF_RIG</ref>,<sp/>3));</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8h_1aff2f14d2a43919fc9074824004594649a93c1a8587bc8b6a6b597585ab077535f" kindref="member">SIL_CONTROL_MODE_VOLTAGE</ref>:</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setControlMode(REF_CONTROL_MODE_VOLTAGE);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setPps(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea82acb03b55e5ebb711dfa1dfccb49590" kindref="member">SIL_INP_REF_RPG</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REF_setQps(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea82acb03b55e5ebb711dfa1dfccb49590" kindref="member">SIL_INP_REF_RPG</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>PCC_setAcReferenceGridVoltage(0U,<sp/><ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea921d239e668458b03bc16a5a66dd5454" kindref="member">SIL_INP_REF_FVR</ref>,<sp/>1));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>PCC_setAcReferenceFrequency(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea921d239e668458b03bc16a5a66dd5454" kindref="member">SIL_INP_REF_FVR</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>systemClearFaults(<ref refid="lib_epc_control_8h_1a785efee4fbf0d28247f2570f245fd735" kindref="member">SIL_PORT_INP</ref>(<ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea1bfba5df17c55efeeda1f2edc61446a7" kindref="member">SIL_INP_CTL_CLR</ref>,<sp/>0)<sp/>&gt;<sp/>0.0L);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scheduler__emu_8h_1ae3c130b06490b98e2f20da59d82c6a8f" kindref="member">SCH_taskHandler_1MS</ref>();</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ad4d3c47eb9a2d78a7c7042067d358d94" kindref="member">SIL_updateState_10ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scheduler__emu_8h_1aed8460784a0722c2a3593b652cd272e3" kindref="member">SCH_taskHandler_10MS</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a06036b1f582360534fabe0accf99ddcc" kindref="member">SIL_updateState_100ms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scheduler__emu_8h_1a05d0fd0ce14a0b0cb0ac9b264c1e9dad" kindref="member">SCH_taskHandler_100MS</ref>();</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a2838f5346d7b4916cd601c41594fc05c" kindref="member">SIL_updateState_1s</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="scheduler__emu_8h_1a2b79db065e89e443594b9d71fdf9fcf3" kindref="member">SCH_taskHandler_1S</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Writes<sp/>all<sp/>necessary<sp/>variables<sp/>to<sp/>snapshot<sp/>data<sp/>file.</highlight></codeline>
<codeline lineno="674"><highlight class="comment">*<sp/><sp/>The<sp/>file<sp/>is<sp/>already<sp/>open<sp/>and<sp/>the<sp/>file<sp/>will<sp/>not<sp/>be<sp/>closed</highlight></codeline>
<codeline lineno="675"><highlight class="comment">*<sp/><sp/>by<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="676"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a3f337ca55a1e439329bc2b11fabbd673" kindref="member">SIL_SIL_writeSnapshot</ref>(FILE*<sp/>snapshotFile)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>portIndex<sp/>=<sp/>0U;<sp/>portIndex<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea1b2283742db0acfe57efef7514862bfa" kindref="member">SIL_INP_CNT</ref>;<sp/>portIndex++)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>),<sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1ab69e675b9188fef7b87df0f8b6388dbc" kindref="member">portWidth</ref>,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>portIndex<sp/>=<sp/>0U;<sp/>portIndex<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aec6cb18105c198265236fb89dfa062ee" kindref="member">SIL_OUT_CNT</ref>;<sp/>portIndex++)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>),<sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1ab69e675b9188fef7b87df0f8b6388dbc" kindref="member">portWidth</ref>,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskIdx<sp/>=<sp/>0U;<sp/>taskIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcaa9e4d7626ae66406a51f13ef77cca768" kindref="member">SIL_TASK_GROUP_CNT</ref>;<sp/>taskIdx++)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskCnt<sp/>=<sp/>0U;<sp/>taskCnt<sp/>&lt;<sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0aabf0e2f1d319c42f4eb74f8795897373" kindref="member">SIL_TASK_CONTEXT_CNT</ref>;<sp/>taskCnt++)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;SIL_TaskGroups[taskIdx].taskHandlers[taskCnt].tCallLast,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIL_TaskGroups[taskIdx].taskHandlers[taskCnt].tCallLast),<sp/>1,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reads<sp/>all<sp/>necessary<sp/>variables<sp/>from<sp/>a<sp/>snapshot<sp/>data<sp/>file.</highlight></codeline>
<codeline lineno="698"><highlight class="comment">*<sp/><sp/>The<sp/>file<sp/>is<sp/>already<sp/>open<sp/>and<sp/>the<sp/>file<sp/>will<sp/>not<sp/>be<sp/>closed</highlight></codeline>
<codeline lineno="699"><highlight class="comment">*<sp/><sp/>by<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="700"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1aeab96a996fe49fffa8e45559025012b9" kindref="member">SIL_SIL_readSnapshot</ref>(FILE*<sp/>snapshotFile)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>portIndex<sp/>=<sp/>0U;<sp/>portIndex<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea1b2283742db0acfe57efef7514862bfa" kindref="member">SIL_INP_CNT</ref>;<sp/>portIndex++)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>),<sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1ab69e675b9188fef7b87df0f8b6388dbc" kindref="member">portWidth</ref>,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>portIndex<sp/>=<sp/>0U;<sp/>portIndex<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aec6cb18105c198265236fb89dfa062ee" kindref="member">SIL_OUT_CNT</ref>;<sp/>portIndex++)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref>),<sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[portIndex].<ref refid="struct_s_i_l___port_spec__s_1ab69e675b9188fef7b87df0f8b6388dbc" kindref="member">portWidth</ref>,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskIdx<sp/>=<sp/>0U;<sp/>taskIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcaa9e4d7626ae66406a51f13ef77cca768" kindref="member">SIL_TASK_GROUP_CNT</ref>;<sp/>taskIdx++)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskCnt<sp/>=<sp/>0U;<sp/>taskCnt<sp/>&lt;<sp/><ref refid="lib_epc_control_8c_1a69f2cbfe0627771bb7a8a35e626491d0aabf0e2f1d319c42f4eb74f8795897373" kindref="member">SIL_TASK_CONTEXT_CNT</ref>;<sp/>taskCnt++)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;SIL_TaskGroups[taskIdx].taskHandlers[taskCnt].tCallLast,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SIL_TaskGroups[taskIdx].taskHandlers[taskCnt].tCallLast),<sp/>1,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a5509b491627e5f7ee27c25815ac07c48" kindref="member">SIL_writeSnapshot</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tNow,<sp/>uint16_t<sp/>instanceNumber,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tempPath)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>snapshotFullPath[_MAX_PATH];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>snapshotFile[_MAX_PATH];</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>full<sp/>path<sp/>from<sp/>the<sp/>given<sp/>argument.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>_fullpath(snapshotFullPath,<sp/>tempPath,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(snapshotFullPath));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>a<sp/>filename<sp/>to<sp/>the<sp/>path<sp/>based<sp/>on<sp/>given<sp/>instance<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(snapshotFile,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(snapshotFile),<sp/></highlight><highlight class="stringliteral">&quot;%s%s%d%s&quot;</highlight><highlight class="normal">,<sp/>snapshotFullPath,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aec2b58cf1ed4b2c1886e3da72fa549fe" kindref="member">SIL_SNAPSHOT_FILENAME</ref>,<sp/>instanceNumber,<sp/><ref refid="lib_epc_control_8c_1ada32dc3ec0f400058499e4580e8eea2b" kindref="member">SIL_SNAPSHOT_FILE_EXTENSION</ref>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Saving<sp/>data<sp/>to<sp/>the<sp/>snapshot<sp/>file<sp/>%s,<sp/>simulation<sp/>time<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>snapshotFile,<sp/>tNow);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>a<sp/>binary<sp/>file<sp/>for<sp/>writing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref><sp/>=<sp/>fopen(snapshotFile,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>file<sp/>cannot<sp/>be<sp/>opened,<sp/>give<sp/>an<sp/>error<sp/>message<sp/>and<sp/>quit<sp/>from<sp/>this<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ac87af9dc4e1a2b96a73588443fd36aa1" kindref="member">SIL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Unable<sp/>to<sp/>open<sp/>snapshot<sp/>file<sp/>for<sp/>writing.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>through<sp/>each<sp/>module<sp/>and<sp/>request<sp/>to<sp/>save<sp/>variable<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a3f337ca55a1e439329bc2b11fabbd673" kindref="member">SIL_SIL_writeSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1a33638d842654de8348be285b3dcdb9fd" kindref="member">EPWM_SIL_writeSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>epwm_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1ad9bda3cab726f79b7c06a60441554998" kindref="member">AD1D_SIL_writeSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ad1d_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a366bea37699901e8e0f83572c121e5d0" kindref="member">AD2D_SIL_writeSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ad2d_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>SYS_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>system.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>SCH_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scheduler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>FLT_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>faultHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>supervisor_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>supervisor.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protections.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>INP_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interfaceProtections.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>gridMonitor_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gridMonitor.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>EI_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>externalInhibit.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>FPGA_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fpgaRegs.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>INTF_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interfaceAccessors.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>MESD_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>measurementd.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>REF_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>referenceHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ioHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>ABB_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ABB_libPrimaryControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>PCD_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseConfigDetect.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>PSD_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseSharedData.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>PBC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protectedBusControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>PCC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>powerConversionControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>AFE_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afe.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>ISL_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>islandControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>PPC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>PLL_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phasePll.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>PWMD_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pwmd.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>SHC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>synchronousHarmonicControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>VSG_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>syntheticInertia.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>TLC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>topLevelControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>APL_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>auxiliaryPll.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>SPC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseCurrentControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>TDR_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temperatureDerate.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>HFO_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>filterObserver.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>AHC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adaptiveHarmonicControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>GSU_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gridSupport.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>TRC_SIL_writeSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transReactiveCurrentSupport.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Saving<sp/>data<sp/>to<sp/>the<sp/>snapshot<sp/>completed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1a296ff2009cd74a2c451a2bcded01dff7" kindref="member">SIL_readSnapshot</ref>(uint16_t<sp/>instanceNumber,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tempPath)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>snapshotFullPath[_MAX_PATH];</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>snapshotFile[_MAX_PATH];</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>full<sp/>path<sp/>from<sp/>the<sp/>given<sp/>argument.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>_fullpath(snapshotFullPath,<sp/>tempPath,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(snapshotFullPath));</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>a<sp/>filename<sp/>to<sp/>the<sp/>path<sp/>based<sp/>on<sp/>given<sp/>instance<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(snapshotFile,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(snapshotFile),<sp/></highlight><highlight class="stringliteral">&quot;%s%s%d%s&quot;</highlight><highlight class="normal">,<sp/>snapshotFullPath,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aec2b58cf1ed4b2c1886e3da72fa549fe" kindref="member">SIL_SNAPSHOT_FILENAME</ref>,<sp/>instanceNumber,<sp/><ref refid="lib_epc_control_8c_1ada32dc3ec0f400058499e4580e8eea2b" kindref="member">SIL_SNAPSHOT_FILE_EXTENSION</ref>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Reading<sp/>data<sp/>from<sp/>the<sp/>snapshot<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>snapshotFile);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>a<sp/>binary<sp/>file<sp/>for<sp/>reading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref><sp/>=<sp/>fopen(snapshotFile,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>file<sp/>cannot<sp/>be<sp/>opened,<sp/>give<sp/>an<sp/>error<sp/>message<sp/>and<sp/>quit<sp/>from<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Most<sp/>likely<sp/>the<sp/>simulation<sp/>will<sp/>give<sp/>strange<sp/>results<sp/>because<sp/>variables<sp/>have<sp/>not<sp/>been<sp/>restored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ac87af9dc4e1a2b96a73588443fd36aa1" kindref="member">SIL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Unable<sp/>to<sp/>open<sp/>snapshot<sp/>file<sp/>for<sp/>reading.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>through<sp/>each<sp/>module<sp/>and<sp/>request<sp/>to<sp/>restore<sp/>variable<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aeab96a996fe49fffa8e45559025012b9" kindref="member">SIL_SIL_readSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="epwm__emu_8c_1af274c8f8e3de1793cfca8b82dac0c036" kindref="member">EPWM_SIL_readSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>epwm_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aceb6ad89b9571df43544631e548e0228" kindref="member">AD1D_SIL_readSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ad1d_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1a1e14b3d0dc196f803eddbdaf9694e990" kindref="member">AD2D_SIL_readSnapshot</ref>(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ad2d_emu.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>SYS_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>system.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>SCH_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scheduler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>FLT_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>faultHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>supervisor_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>supervisor.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>PROT_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protections.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>INP_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interfaceProtections.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>gridMonitor_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gridMonitor.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>EI_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>externalInhibit.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>FPGA_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fpgaRegs.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>INTF_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interfaceAccessors.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>MESD_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>measurementd.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>REF_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>referenceHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>IOH_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ioHandler.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>ABB_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ABB_libPrimaryControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>PCD_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseConfigDetect.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>PSD_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseSharedData.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>PBC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protectedBusControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>PCC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>powerConversionControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>AFE_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>afe.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>ISL_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>islandControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>PPC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>PLL_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phasePll.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>PWMD_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pwmd.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>SHC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>synchronousHarmonicControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>VSG_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>syntheticInertia.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>TLC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>topLevelControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>APL_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>auxiliaryPll.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>SPC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phaseCurrentControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>TDR_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temperatureDerate.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>HFO_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>filterObserver.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>AHC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adaptiveHarmonicControl.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>GSU_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gridSupport.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>TRC_SIL_readSnapshot(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transReactiveCurrentSupport.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="lib_epc_control_8c_1a842a505ccbf33200790bee3a49ea14e4" kindref="member">SIL_SnapshotFile</ref>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1a0ae9eb531a183bee8efa5ecd248c4120" kindref="member">SIL_DIAG</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Reading<sp/>data<sp/>from<sp/>the<sp/>snapshot<sp/>completed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/>Et<sp/>Cetera<sp/>******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lib_epc_control_8c_1ad56504ca7eecddc4addf6b342e0d6370" kindref="member">SIL_diagPrintf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/>*<sp/>Static<sp/>Functions<sp/>**********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>runTaskContextHandlers(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tNow,<sp/><ref refid="lib_epc_control_8c_1a3210e1f49d48170d6b757cb502986256" kindref="member">SIL_eTaskContext_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eContext)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskIdx<sp/>=<sp/>0U;<sp/>taskIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcaa9e4d7626ae66406a51f13ef77cca768" kindref="member">SIL_TASK_GROUP_CNT</ref>;<sp/>taskIdx++)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_group__s" kindref="compound">SIL_sTaskGroup_t</ref><sp/><sp/><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>taskGroup<sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;SIL_TaskGroups[taskIdx];</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_i_l___task_handler__s" kindref="compound">SIL_sTaskHandler_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>taskHandler<sp/><sp/><sp/>=<sp/>&amp;taskGroup-&gt;<ref refid="struct_s_i_l___task_group__s_1a0778f75f0941a6b7facad2e87cd11f24" kindref="member">taskHandlers</ref>[eContext];</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tDelta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tNow<sp/>-<sp/>taskHandler-&gt;<ref refid="struct_s_i_l___task_handler__s_1a83e576ac97d0e1fd408e6417aefe659a" kindref="member">tCallLast</ref><sp/>+<sp/><ref refid="lib_epc_control_8c_1ae782abdb390d65528ebd622389c5a5d4" kindref="member">SIL_EPSILON</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tDelta<sp/>&gt;=<sp/>taskGroup-&gt;<ref refid="struct_s_i_l___task_group__s_1a982ad70934e0c0f81b23012c022654bc" kindref="member">tPeriod</ref>)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*taskHandler-&gt;<ref refid="struct_s_i_l___task_handler__s_1a7793cf5336e0ac983f3336229f436355" kindref="member">taskCallback</ref>)(tNow);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>taskHandler-&gt;<ref refid="struct_s_i_l___task_handler__s_1a83e576ac97d0e1fd408e6417aefe659a" kindref="member">tCallLast</ref><sp/>=<sp/>tNow;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>validateFixedSampleTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tStep)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bConfigOk<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>tStep<sp/>=<sp/>tStep<sp/>*<sp/>1.0e6;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>taskIdx<sp/>=<sp/>0U;<sp/>taskIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a1a498bbc9ad38cb13293325bb5eb3bdcaa9e4d7626ae66406a51f13ef77cca768" kindref="member">SIL_TASK_GROUP_CNT</ref>;<sp/>taskIdx++)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tGroup<sp/>=<sp/>SIL_TaskGroups[taskIdx].<ref refid="struct_s_i_l___task_group__s_1a982ad70934e0c0f81b23012c022654bc" kindref="member">tPeriod</ref><sp/>*<sp/>1.0e6;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tAlias<sp/>=<sp/>fabs(fmod(tGroup,<sp/>tStep));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tAlias<sp/>&gt;=<sp/><ref refid="lib_epc_control_8c_1ae782abdb390d65528ebd622389c5a5d4" kindref="member">SIL_EPSILON</ref><sp/>*<sp/>1.0e6)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ac87af9dc4e1a2b96a73588443fd36aa1" kindref="member">SIL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;\n\nSIL:<sp/>Simulation<sp/>Timestep<sp/>(%.1fus)<sp/>Invalid!<sp/>tGroup<sp/>=<sp/>%.1fus,<sp/>tAlias<sp/>=<sp/>%.1fus<sp/>***\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tStep,<sp/>tGroup,<sp/>tAlias);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bConfigOk<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bConfigOk;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validatePortPointers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>valid<sp/>dummy<sp/>pointers<sp/>to<sp/>ports<sp/>that<sp/>have<sp/>not<sp/>been<sp/>assigned<sp/>to</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>allow<sp/>operation<sp/>with<sp/>under-specified<sp/>ports<sp/>if<sp/>desired...<sp/>but<sp/>tell<sp/>about<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>inpIdx<sp/>=<sp/>0U;<sp/>inpIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a7ccd8a2278ccf17d66ea951ee773885ea1b2283742db0acfe57efef7514862bfa" kindref="member">SIL_INP_CNT</ref>;<sp/>inpIdx++)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[inpIdx].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1a59d3b5a45df34ec671bb2e672714591e" kindref="member">inpPort</ref>[inpIdx].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref><sp/><sp/>=<sp/>SIL_DummyInp;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ab437589e9e94c01c02ba99450e313752" kindref="member">SIL_WARNING</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Input<sp/>port<sp/>%d<sp/>unassigned.<sp/>Assigned<sp/>to<sp/>dummy<sp/>array.\n&quot;</highlight><highlight class="normal">,<sp/>inpIdx);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>outIdx<sp/>=<sp/>0U;<sp/>outIdx<sp/>&lt;<sp/><ref refid="lib_epc_control_8h_1a941236de0fbb8ebfef607ae4eea4fac3aec6cb18105c198265236fb89dfa062ee" kindref="member">SIL_OUT_CNT</ref>;<sp/>outIdx++)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[outIdx].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_epc_control_8c_1aa8c520d7306f12a6098f3cb4fdd3d1ea" kindref="member">SIL_Ports</ref>.<ref refid="struct_s_i_l___ports__s_1aaf3477f1b1edd8dcc8ca4751760b849b" kindref="member">outPort</ref>[outIdx].<ref refid="struct_s_i_l___port_spec__s_1a79751280ee24342b33b8bd7d7c7d8f5a" kindref="member">portPointer</ref><sp/><sp/>=<sp/>SIL_DummyOut;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sil_wrapper_8h_1ab437589e9e94c01c02ba99450e313752" kindref="member">SIL_WARNING</ref>(</highlight><highlight class="stringliteral">&quot;SIL:<sp/>Output<sp/>port<sp/>%d<sp/>unassigned.<sp/>Assigned<sp/>to<sp/>dummy<sp/>array.\n&quot;</highlight><highlight class="normal">,<sp/>outIdx);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/RileyTurner/Desktop/gridtied copy/sil/libEpcControl.c"/>
  </compounddef>
</doxygen>
